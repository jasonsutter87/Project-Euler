####################################
##
##     Project Euler: Problem 08
##
##      Jason Sutter
##      Jasonsutter87@gmail.com
##
##      Answer:   23,514,624,000
##
###################################
#The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.

#73167176531330624919225119674426574742355349194934
#96983520312774506326239578318016984801869478851843
#85861560789112949495459501737958331952853208805511
#12540698747158523863050715693290963295227443043557
#66896648950445244523161731856403098711121722383113
#62229893423380308135336276614282806444486645238749
#30358907296290491560440772390713810515859307960866
#70172427121883998797908792274921901699720888093776
#65727333001053367881220235421809751254540594752243
#52584907711670556013604839586446706324415722155397
#53697817977846174064955149290862569321978468622482
#83972241375657056057490261407972968652414535100474
#82166370484403199890008895243450658541227588666881
#16427171479924442928230863465674813919123162824586
#17866458359124566529476545682848912883142607690042
#24219022671055626321111109370544217506941658960408
#07198403850962455444362981230987879927244284909188
#84580156166097919133875499200524063689912560717606
#05886116467109405077541002256983155200055935729725
#71636269561882670428252483600823257530420752963450

#Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?

#Set the 1000-digit number  as a string
bigNum = "7316717653133062491922511967442657474235534919493496983
52031277450632623957831801698480186947885184385861560789112949495
45950173795833195285320880551112540698747158523863050715693290963
29522744304355766896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749303589072962904
91560440772390713810515859307960866701724271218839987979087922749
219016997208880937766572733300105336788122023542180975125454059475
22435258490771167055601360483958644670632441572215539753697817977
84617406495514929086256932197846862248283972241375657056057490261
40797296865241453510047482166370484403199890008895243450658541227
588666881164271714799244429282308634656748139191231628245861786645
835912456652947654568284891288314260769004224219022671055626321111
10937054421750694165896040807198403850962455444362981230987879927244
28490918884580156166097919133875499200524063689912560717606058861164671
094050775410022569831552000559357297257163626956188267042825248360082325
7530420752963450"


#set the count, and make an empty array
count = 1
my_Array = []

#Loop while count is less than the 1000-digit number continue
while count < bigNum.length
   
    #Find the highest product with 13 adjacent digits  
    product = bigNum[count].to_i * 
          bigNum[count + 1].to_i * 
          bigNum[count + 2].to_i * 
          bigNum[count + 3].to_i * 
          bigNum[count + 4].to_i * 
          bigNum[count + 5].to_i * 
          bigNum[count + 6].to_i * 
          bigNum[count + 7].to_i * 
          bigNum[count + 8].to_i *  
          bigNum[count + 9].to_i *  
          bigNum[count + 10].to_i * 
          bigNum[count + 11].to_i *  
          bigNum[count + 12].to_i  
   #add the product to the array
    my_Array << product
    #advance the count
    count += 1
end

#the solution will be the last item item in the array
p "The Solution is: " + my_Array.sort {|a, b| a <=> b }.last.to_s

